{"ast":null,"code":"var _jsxFileName = \"/Users/artempudovkin/dev/react-mesto-auth/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Auth from '../utils/auth';\nimport registrationOk from \"../images/authorization-ok.svg\";\nimport registrationWrong from \"../images/authorization-bad.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  setEmail,\n  openInfoTooltip,\n  onClose,\n  infoTooltipContent,\n  setLoggedIn\n}) {\n  _s();\n\n  const [valueEmail, setValueEmail] = React.useState('');\n  const [valuePassword, setValuePassword] = React.useState('');\n  const history = useHistory();\n\n  function handleChangeEmail(evt) {\n    setValueEmail(evt.target.value);\n  }\n\n  function handleChangePassword(evt) {\n    setValuePassword(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const email = valueEmail;\n    const password = valuePassword;\n    Auth.authorize(email, password).then(data => {\n      if (!data) {\n        throw new Error('Произошла ошибка');\n      }\n\n      Auth.getContent(data).then(res => {\n        setEmail(res.data.email);\n      }).catch(err => console.log(err));\n      setLoggedIn(true);\n      infoTooltipContent({\n        iconPath: registrationOk,\n        text: 'Вы успешно авторизовались!'\n      });\n      openInfoTooltip();\n      setTimeout(history.push, 3000, '/');\n      setTimeout(onClose, 2500);\n    }).catch(err => {\n      infoTooltipContent({\n        iconPath: registrationWrong,\n        text: 'Что-то пошло не так!'\n      });\n      openInfoTooltip();\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"start-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"start-screen__title\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"start-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: valueEmail,\n        className: \"start-screen__input\",\n        placeholder: \"Email\",\n        onChange: handleChangeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: valuePassword,\n        className: \"start-screen__input\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        onChange: handleChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-screen__submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"C9Qbb7DWpKK/idZGiB1CoB1bH3Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/artempudovkin/dev/react-mesto-auth/src/components/Login.js"],"names":["React","Auth","useHistory","Login","setEmail","openInfoTooltip","onClose","infoTooltipContent","setLoggedIn","valueEmail","setValueEmail","useState","valuePassword","setValuePassword","history","handleChangeEmail","evt","target","value","handleChangePassword","handleSubmit","preventDefault","email","password","authorize","then","data","Error","getContent","res","catch","err","console","log","iconPath","registrationOk","text","setTimeout","push","registrationWrong"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as Auth from '../utils/auth'\nimport registrationOk from '../images/authorization-ok.svg'\nimport registrationWrong from '../images/authorization-bad.svg'\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction Login({setEmail, openInfoTooltip, onClose, infoTooltipContent, setLoggedIn}) {\n    const [valueEmail, setValueEmail] = React.useState('')\n    const [valuePassword, setValuePassword] = React.useState('')\n    const history = useHistory();\n\n    function handleChangeEmail(evt) {\n        setValueEmail(evt.target.value)\n    }\n\n    function handleChangePassword(evt) {\n        setValuePassword(evt.target.value)\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault()\n        const email = valueEmail;\n        const password = valuePassword;\n\n        Auth.authorize(email, password)\n            .then((data) => {\n                if (!data) {\n                    throw new Error('Произошла ошибка')\n                }\n                Auth.getContent(data)\n                    .then((res) => {\n                        setEmail(res.data.email)\n                    })\n                    .catch(err => console.log(err));\n                setLoggedIn(true);\n                infoTooltipContent({iconPath: registrationOk, text: 'Вы успешно авторизовались!'})\n                openInfoTooltip();\n                setTimeout(history.push, 3000, '/');\n                setTimeout(onClose, 2500);\n            })\n            .catch((err) => {\n                infoTooltipContent({iconPath: registrationWrong, text: 'Что-то пошло не так!'})\n                openInfoTooltip();\n                console.log(err)\n            })\n    }\n\n\n    return (\n        <section className=\"start-screen\">\n            <h1 className=\"start-screen__title\">Вход</h1>\n            <form onSubmit={handleSubmit} className=\"start-screen__form\">\n                <input value={valueEmail} className=\"start-screen__input\" placeholder=\"Email\"\n                       onChange={handleChangeEmail}/>\n                <input value={valuePassword} className=\"start-screen__input\" placeholder=\"Пароль\"\n                       onChange={handleChangePassword}/>\n                <button className=\"start-screen__submit\">Войти</button>\n            </form>\n        </section>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}