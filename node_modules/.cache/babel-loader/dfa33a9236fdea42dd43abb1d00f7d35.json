{"ast":null,"code":"class Api {\n  constructor({\n    address,\n    headers\n  }) {\n    this._address = address; //this._token = token\n\n    this._headers = headers;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  } // Получаем массив карточек с сервера\n\n\n  getUserInfo() {\n    return fetch(`${this._address}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  } // Получаем информацию о пользователе с сервера\n\n\n  editUserInfo(name, about) {\n    return fetch(`${this._address}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._address}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  editUserAvatar(url) {\n    console.log(url);\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: url\n      })\n    }).then(this._checkResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.dislikeCard(cardId);\n    } else {\n      return this.likeCard(cardId);\n    }\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._address}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n}\n\nconst api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1/cohort-22',\n  headers: {\n    authorization: 'ed089852-ab21-42a0-b909-11eeabdb931a',\n    'Content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/artempudovkin/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","address","headers","_address","_headers","getInitialCards","fetch","then","_checkResponse","getUserInfo","editUserInfo","name","about","method","body","JSON","stringify","addCard","link","editUserAvatar","url","console","log","avatar","likeCard","cardId","dislikeCard","changeLikeCardStatus","isLiked","removeCard","res","ok","Promise","reject","status","json","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({address, headers}) {\n        this._address = address\n        //this._token = token\n        this._headers = headers\n    }\n\n    getInitialCards() {\n        return fetch(`${this._address}/cards`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем массив карточек с сервера\n\n    getUserInfo() {\n        return fetch(`${this._address}/users/me`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем информацию о пользователе с сервера\n\n    editUserInfo(name, about) {\n        return fetch(`${this._address}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        }).then(this._checkResponse)\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._address}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        }).then(this._checkResponse)\n    }\n\n    editUserAvatar(url) {\n        console.log(url)\n        return fetch(`${this._address}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: url\n            })\n        }).then(this._checkResponse)\n    }\n\n    likeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    dislikeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.dislikeCard(cardId)\n        } else {\n            return this.likeCard(cardId)\n        }\n    }\n\n    removeCard(cardId) {\n        return fetch(`${this._address}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    _checkResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n        return res.json();\n    }\n}\n\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1/cohort-22',\n    headers: {\n        authorization: 'ed089852-ab21-42a0-b909-11eeabdb931a',\n        'Content-type': 'application/json'\n    }\n})\nexport default api"]},"metadata":{},"sourceType":"module"}