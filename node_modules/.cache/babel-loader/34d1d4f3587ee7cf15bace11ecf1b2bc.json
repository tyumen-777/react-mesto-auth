{"ast":null,"code":"import _classCallCheck from\"/Users/artempudovkin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/artempudovkin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var address=_ref.address,headers=_ref.headers;_classCallCheck(this,Api);this._address=address;//this._token = token\nthis._headers=headers;}_createClass(Api,[{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._address,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}// Получаем массив карточек с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._address,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}// Получаем информацию о пользователе с сервера\n},{key:\"editUserInfo\",value:function editUserInfo(name,about){return fetch(\"\".concat(this._address,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this._address,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"editUserAvatar\",value:function editUserAvatar(url){console.log(url);return fetch(\"\".concat(this._address,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:url})}).then(this._checkResponse);}},{key:\"likeCard\",value:function likeCard(cardId){return fetch(\"\".concat(this._address,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"dislikeCard\",value:function dislikeCard(cardId){return fetch(\"\".concat(this._address,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this.dislikeCard(cardId);}else{return this.likeCard(cardId);}}},{key:\"removeCard\",value:function removeCard(cardId){return fetch(\"\".concat(this._address,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"_checkResponse\",value:function _checkResponse(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}return res.json();}}]);return Api;}();var api=new Api({address:'https://mesto.nomoreparties.co/v1/cohort-22',headers:{authorization:'ed089852-ab21-42a0-b909-11eeabdb931a','Content-type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/artempudovkin/dev/mesto-react/src/utils/api.js"],"names":["Api","address","headers","_address","_headers","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","link","url","console","log","avatar","cardId","isLiked","dislikeCard","likeCard","res","ok","Promise","reject","status","json","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({address, headers}) {\n        this._address = address\n        //this._token = token\n        this._headers = headers\n    }\n\n    getInitialCards() {\n        return fetch(`${this._address}/cards`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем массив карточек с сервера\n\n    getUserInfo() {\n        return fetch(`${this._address}/users/me`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем информацию о пользователе с сервера\n\n    editUserInfo(name, about) {\n        return fetch(`${this._address}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        }).then(this._checkResponse)\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._address}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        }).then(this._checkResponse)\n    }\n\n    editUserAvatar(url) {\n        console.log(url)\n        return fetch(`${this._address}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: url\n            })\n        }).then(this._checkResponse)\n    }\n\n    likeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    dislikeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.dislikeCard(cardId)\n        } else {\n            return this.likeCard(cardId)\n        }\n    }\n\n    removeCard(cardId) {\n        return fetch(`${this._address}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    _checkResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n        return res.json();\n    }\n}\n\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1/cohort-22',\n    headers: {\n        authorization: 'ed089852-ab21-42a0-b909-11eeabdb931a',\n        'Content-type': 'application/json'\n    }\n})\nexport default api"]},"metadata":{},"sourceType":"module"}