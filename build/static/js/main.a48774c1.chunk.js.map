{"version":3,"sources":["images/logo__header.svg","components/Header.js","images/plusButton.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/Footer.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","link","name","onClick","type","length","Main","props","onEditAvatar","onAddPlace","onEditProfile","cards","avatar","about","plusButton","map","PopupWithForm","isOpen","onClose","title","noValidate","onSubmit","handleSubmit","children","buttonText","ImagePopup","api","address","headers","this","_address","_headers","fetch","then","_checkResponse","method","body","JSON","stringify","url","console","log","cardId","dislikeCard","likeCard","res","ok","json","Promise","reject","status","authorization","Footer","Date","getFullYear","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","value","placeholder","required","minLength","maxLength","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarInput","useRef","current","ref","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialCards","cardList","catch","err","getUserInfo","data","Provider","i","changeLikeCardStatus","newCard","currentCard","removeCard","newCards","filter","elem","editUserInfo","editUserAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a48774c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo__header.03b78ada.svg\";","import headerLogo from '../images/logo__header.svg'\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={headerLogo} alt=\"Логотип сайта\" className=\"header__logo\" />\n        </header>\n    );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/plusButton.d86bb2ed.svg\";","import React from \"react\";\n\n\n\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const isOwn = card.owner._id === currentUser._id;\n\n    const cardDeleteButtonClassName = (\n        `elements__button-delete ${isOwn ? 'elements__button-delete' : 'elements__button-delete_hidden'}`\n    );\n\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    const cardLikeButtonClassName =\n        `elements__button-like ${isLiked ? 'elements__button-like-active' : ''}`;\n\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleCardDelete() {\n        onCardDelete(card)\n    }\n\n    return (\n        <div className=\"elements-template\">\n            <div className=\"elements__item card\">\n                <img src={card.link} alt={card.name} className=\"elements__photo\" onClick={handleClick}\n                />\n                <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleCardDelete}></button>\n                <h3 className=\"elements__paragraph\">{card.name}</h3>\n                <div className=\"elements__button-like-container\">\n                    <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\n                    <p className=\"elements__button-like-counter\">{card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import plusButton from '../images/plusButton.svg'\n\nimport React from \"react\";\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n\n    const {onEditAvatar, onAddPlace, onEditProfile, onCardClick, onCardLike, onCardDelete, cards} = props;\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"main\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-container\">\n                    <img src={`${currentUser.avatar}`} alt=\"Фото Аватара\" className=\"profile__avatar\"/>\n                    <button className=\"profile__avatar-edit\" type=\"button\" onClick={onEditAvatar}> </button>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__edit\">\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\n                        <button className=\"profile__button-edit\" type=\"button\"\n                                onClick={onEditProfile}> </button>\n                    </div>\n                    <p className=\"profile__profession\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__button-add\" type=\"button\" onClick={onAddPlace}>\n                    <img src={plusButton} alt=\"Значок плюса\"/>\n                </button>\n            </section>\n            <section className=\"elements\">\n                {cards.map(card => (<Card key={card._id} card={card} onCardClick={onCardClick}\n                                          onCardLike={onCardLike} onCardDelete={onCardDelete}/>))}\n            </section>\n        </main>\n    )\n}\n\n\nexport default Main;","import React from \"react\";\n\nfunction PopupWithForm(props) {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup__opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__button-close\" type=\"button\" onClick={props.onClose}></button>\n                <h2 className=\"popup__heading\">{props.title}</h2>\n                <form className={`popup__input form_type_${props.name}`} name=\"popup\" noValidate onSubmit={props.handleSubmit}>\n                    {props.children}\n                    <button className=\"popup__button-save\" type=\"submit\" >\n                        {props.buttonText}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\nexport default PopupWithForm;","import React from \"react\";\n\nfunction ImagePopup(props) {\n\n    return (\n        <div className={`popup opened-image ${props.card && props.isOpen ? 'popup__opened' : ''}`}>\n            <div className=\"popup__photocontainer\">\n                <button className=\"popup__button-close\" type=\"button\" onClick={props.onClose}></button>\n                <img src={`${props.card.link}`} alt={props.card.name} className=\"popup__image\"/>\n                <h2 className=\"popup__phototitle\">{props.card.name} </h2>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup;","class Api {\n    constructor({address, headers}) {\n        this._address = address\n        //this._token = token\n        this._headers = headers\n    }\n\n    getInitialCards() {\n        return fetch(`${this._address}/cards`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем массив карточек с сервера\n\n    getUserInfo() {\n        return fetch(`${this._address}/users/me`, {\n            headers: this._headers\n        }).then(this._checkResponse)\n    } // Получаем информацию о пользователе с сервера\n\n    editUserInfo(name, about) {\n        return fetch(`${this._address}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        }).then(this._checkResponse)\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._address}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        }).then(this._checkResponse)\n    }\n\n    editUserAvatar(url) {\n        console.log(url)\n        return fetch(`${this._address}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: url\n            })\n        }).then(this._checkResponse)\n    }\n\n    likeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    dislikeCard(cardId) {\n        return fetch(`${this._address}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.dislikeCard(cardId)\n        } else {\n            return this.likeCard(cardId)\n        }\n    }\n\n    removeCard(cardId) {\n        return fetch(`${this._address}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse)\n    }\n\n    _checkResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n        return res.json();\n    }\n}\n\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1/cohort-22',\n    headers: {\n        authorization: 'ed089852-ab21-42a0-b909-11eeabdb931a',\n        'Content-type': 'application/json'\n    }\n})\nexport default api","import React from \"react\";\nfunction Footer() {\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">{`© 2020 - ${new Date().getFullYear()} Mesto Russia`}</p>\n        </footer>\n    )\n}\nexport default Footer;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser])\n\n    return (\n        <PopupWithForm\n            title=\"Редактировать профиль\"\n            name=\"profile\"\n            buttonText=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}>\n            <input id=\"form-name-input\" type=\"text\" className=\"popup__field popup__field_name\" name=\"name\"\n                   value={name || \"\"}\n                   placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\"\n                   onChange={handleChangeName}/>\n            <span className=\"form-name-input-error\"></span>\n            <input id=\"form-profession-input\" type=\"text\" className=\"popup__field popup__field_profession\"\n                   name=\"about\"\n                   value={description || \"\"}\n                   placeholder=\"Профессия\" required minLength=\"2\" maxLength=\"200\"\n                   onChange={handleChangeDescription}/>\n            <span className=\"form-profession-input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n\n    //const currentUser = React.useContext(CurrentUserContext);\n    const avatarInput = React.useRef();\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        onUpdateAvatar({\n            avatar: avatarInput.current.value,\n        })\n    }\n\n    // React.useEffect(()=> {\n    //     avatarInput.current.value = currentUser.avatar;\n    // }, [''])\n\n    return (\n        <PopupWithForm\n            title=\"Обновить аватар\"\n            name=\"avatar\"\n            buttonText=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}>\n            <input type=\"url\" className=\"popup__field popup__avatar-link\" id=\"form-avatar-input\" name=\"link\"\n                   placeholder=\"Ссылка на аватар\" ref={avatarInput} required/>\n            <span className=\"form-avatar-input-error\"> </span>\n        </PopupWithForm>\n    )\n};\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n\n    const [name, setName] = React.useState('')\n    const [link, setLink] = React.useState('')\n\n    function handleSubmit(evt) {\n        evt.preventDefault()\n        onAddPlace({\n            name: name,\n            link: link,\n        })\n    }\n\n    function handleChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeLink(evt) {\n        setLink(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            title=\"Новое место\"\n            name=\"photo\"\n            buttonText=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}>\n            <input type=\"text\" className=\"popup__field \" id=\"form-title-input\" name=\"name\"\n                   placeholder=\"Название\"\n                   required\n                   minLength=\"2\" maxLength=\"30\" onChange={handleChangeName}/>\n            <span className=\"form-title-input-error\"> </span>\n            <input type=\"url\" className=\"popup__field popup__field_link\" id=\"form-link-input\" name=\"link\"\n                   placeholder=\"Ссылка на картинку\" required onChange={handleChangeLink}/>\n            <span className=\"form-link-input-error\"> </span>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;","import React from 'react'\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\"\nimport ImagePopup from \"./ImagePopup\"\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then(cardList => {\n                setCards(cardList);\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, isLiked)\n            .then((newCard) => {\n                //const newCards = cards.map((currentCard) => currentCard._id === card._id ? newCard : currentCard)\n                //setCards(newCards)\n                setCards((cards) => cards.map((currentCard) => currentCard._id === card._id ? newCard : currentCard))\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((elem) => elem !== card);\n                setCards(newCards);\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data)\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n    }, [])\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.editUserInfo(name, about)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar({avatar}) {\n        api.editUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((data) => {\n                setCards([data, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <div className=\"page__container\">\n                    <Header/>\n                    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                          onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n                          onCardLike={handleCardLike} cards={cards}\n                          onCardDelete={handleCardDelete}/>\n                    <Footer/>\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                                      onUpdateUser={handleUpdateUser}/>\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                                     onUpdateAvatar={handleUpdateAvatar}/>\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                                   onAddPlace={handleAddPlaceSubmit}/>\n\n                    <PopupWithForm\n                        title=\"Вы уверены?\"\n                        name=\"remove-card\"\n                        buttonText=\"Да\"\n                        onClose={closeAllPopups}>\n                    </PopupWithForm>\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                        isOpen={isImagePopupOpen}/>\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}